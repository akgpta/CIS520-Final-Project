get_data()

num_features = 8;

activation_function_string = "relu";
num_iters = 20000;
learning_rate = 0.1;

if (strcmp(activation_function_string,"relu"))
    activation_function = @relu;
    activation_function_derivative = @relu_derivative;
else
    activation_function = @logistic_sigmoid;
    activation_function_derivative = @logistic_sigmoid_derivative;
end

for fold 1:4
    X_train_cv = [];
    y_train_cv = [];
    X_test_cv = cv_data_x{fold};
    y_test_cv = cv_data_y{fold};
    
    for idx = 1:5
            if idx ~= fold
                X_train_cv = [X_train_cv; cv_data_x{idx}];
                y_train_cv = [y_train_cv; cv_data_y{idx}];
            end
    end
    
    [W1, b1, W2, b2] = TrainNetwork(X_train, y_train, W1, b1, W2, b2, activation_function, activation_function_derivative, num_iters, learning_rate);
    
    y_hat_train = predict(X_train, W1, W2, b1, b2, activation_function);
end

